{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5","program":"C:\\Users\\Juan\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","typemap_rev","--edition=2018","C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1b0669c9cdaaac2a","-C","extra-filename=-1b0669c9cdaaac2a","--out-dir","c:\\Users\\Juan\\Documents\\Facultad\\TdL\\D\\DiscordBot\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Juan\\Documents\\Facultad\\TdL\\D\\DiscordBot\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Juan\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"c:\\Users\\Juan\\Documents\\Facultad\\TdL\\D\\DiscordBot\\target\\rls\\debug\\deps\\libtypemap_rev-1b0669c9cdaaac2a.rmeta"},"prelude":{"crate_id":{"name":"typemap_rev","disambiguator":[6698079832736002258,0]},"crate_root":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src","external_crates":[{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[4058791633724922335,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5672350903236634929,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3994442952107217335,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2499407958651993485,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15553438394447616563,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[17400603739164670798,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8073212487128778075,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14495980152692853555,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17749255317524329583,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4646839991705512942,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[15770094135932194224,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[3541244023656712295,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7935353066861004566,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6058206347889234244,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":15,"id":{"name":"object","disambiguator":[2999257529657196981,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17144399121537350502,0]}},{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[13542884930897069605,0]}}],"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":0,"byte_end":9615,"line_start":1,"line_end":390,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":0,"byte_end":9615,"line_start":1,"line_end":390,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":60},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":85},{"krate":0,"index":90}],"decl_id":null,"docs":" A hashmap whose keys are defined by types.\n","sig":null,"attributes":[{"value":"/ A hashmap whose keys are defined by types.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":428,"byte_end":438,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"TypeMapKey","qualname":"::TypeMapKey","value":"TypeMapKey: Any","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" TypeMapKey is used to declare key types that are eligible for use\n with [`TypeMap`].","sig":null,"attributes":[{"value":"/ TypeMapKey is used to declare key types that are eligible for use","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":285,"byte_end":354,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ with [`TypeMap`].","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":355,"byte_end":376,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":377,"byte_end":380,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`TypeMap`]: struct.TypeMap.html","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":381,"byte_end":417,"line_start":15,"line_end":15,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":525,"byte_end":530,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Value","qualname":"::TypeMapKey::Value","value":"type Value: Send + Sync;","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Defines the value type that corresponds to this `TypeMapKey`.\n","sig":null,"attributes":[{"value":"/ Defines the value type that corresponds to this `TypeMapKey`.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":450,"byte_end":515,"line_start":17,"line_end":17,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":776,"byte_end":783,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"TypeMap","qualname":"::TypeMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" TypeMap is a simple abstraction around the standard library's [`HashMap`]\n type, where types are its keys. This allows for statically-checked value\n retrieval.","sig":null,"attributes":[{"value":"/ TypeMap is a simple abstraction around the standard library's [`HashMap`]","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":548,"byte_end":625,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ type, where types are its keys. This allows for statically-checked value","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":626,"byte_end":702,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ retrieval.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":703,"byte_end":717,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":718,"byte_end":721,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":722,"byte_end":764,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":918,"byte_end":921,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `TypeMap`.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":852,"byte_end":892,"line_start":29,"line_end":29,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":897,"byte_end":906,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1455,"byte_end":1467,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<TypeMap>::contains_key","value":"pub fn contains_key<T>(&Self) -> bool where T: TypeMapKey","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified [`TypeMapKey`].","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified [`TypeMapKey`].","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":974,"byte_end":1054,"line_start":35,"line_end":35,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1059,"byte_end":1062,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1067,"byte_end":1078,"line_start":37,"line_end":37,"column_start":5,"column_end":16}},{"value":"/ use typemap_rev::{TypeMap, TypeMapKey};","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1083,"byte_end":1126,"line_start":38,"line_end":38,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1131,"byte_end":1134,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ struct Number;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1139,"byte_end":1157,"line_start":40,"line_end":40,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1162,"byte_end":1165,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ impl TypeMapKey for Number {","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1170,"byte_end":1202,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/     type Value = i32;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1207,"byte_end":1232,"line_start":43,"line_end":43,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1237,"byte_end":1242,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1247,"byte_end":1250,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut map = TypeMap::new();","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1255,"byte_end":1288,"line_start":46,"line_end":46,"column_start":5,"column_end":38}},{"value":"/ assert!(!map.contains_key::<Number>());","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1293,"byte_end":1336,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/ map.insert::<Number>(42);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1341,"byte_end":1370,"line_start":48,"line_end":48,"column_start":5,"column_end":34}},{"value":"/ assert!(map.contains_key::<Number>());","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1375,"byte_end":1417,"line_start":49,"line_end":49,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1422,"byte_end":1429,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1434,"byte_end":1443,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2182,"byte_end":2188,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"insert","qualname":"<TypeMap>::insert","value":"pub fn insert<T>(&mut Self, T::Value) where T: TypeMapKey","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new value based on its [`TypeMapKey`].\n If the value has been already inserted, it will be overwritten\n with the new value.","sig":null,"attributes":[{"value":"/ Inserts a new value based on its [`TypeMapKey`].","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1583,"byte_end":1635,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"/ If the value has been already inserted, it will be overwritten","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1640,"byte_end":1706,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/ with the new value.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1711,"byte_end":1734,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1739,"byte_end":1742,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1747,"byte_end":1758,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/ use typemap_rev::{TypeMap, TypeMapKey};","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1763,"byte_end":1806,"line_start":64,"line_end":64,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1811,"byte_end":1814,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ struct Number;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1819,"byte_end":1837,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1842,"byte_end":1845,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ impl TypeMapKey for Number {","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1850,"byte_end":1882,"line_start":68,"line_end":68,"column_start":5,"column_end":37}},{"value":"/     type Value = i32;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1887,"byte_end":1912,"line_start":69,"line_end":69,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1917,"byte_end":1922,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1927,"byte_end":1930,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut map = TypeMap::new();","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1935,"byte_end":1968,"line_start":72,"line_end":72,"column_start":5,"column_end":38}},{"value":"/ map.insert::<Number>(42);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":1973,"byte_end":2002,"line_start":73,"line_end":73,"column_start":5,"column_end":34}},{"value":"/ // Overwrite the value of `Number` with -42.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2007,"byte_end":2055,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ map.insert::<Number>(-42);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2060,"byte_end":2090,"line_start":75,"line_end":75,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2095,"byte_end":2102,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2107,"byte_end":2110,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`TypeMapKey`]: trait.TypeMapKey.html","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2115,"byte_end":2156,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2161,"byte_end":2170,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2458,"byte_end":2463,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"entry","qualname":"<TypeMap>::entry","value":"pub fn entry<T>(&mut Self) -> Entry<, T> where T: TypeMapKey","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the entry based on its [`TypeMapKey`]","sig":null,"attributes":[{"value":"/ Retrieve the entry based on its [`TypeMapKey`]","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2328,"byte_end":2378,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2383,"byte_end":2386,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`TypeMapKey`]: trait.TypeMapKey.html","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2391,"byte_end":2432,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2437,"byte_end":2446,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3437,"byte_end":3440,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"get","qualname":"<TypeMap>::get","value":"pub fn get<T>(&Self) -> Option<&T::Value> where T: TypeMapKey","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a reference to a value based on its [`TypeMapKey`].\n Returns `None` if it couldn't be found.","sig":null,"attributes":[{"value":"/ Retrieve a reference to a value based on its [`TypeMapKey`].","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2902,"byte_end":2966,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ Returns `None` if it couldn't be found.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":2971,"byte_end":3014,"line_start":108,"line_end":108,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3019,"byte_end":3022,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3027,"byte_end":3038,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ use typemap_rev::{TypeMap, TypeMapKey};","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3043,"byte_end":3086,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3091,"byte_end":3094,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ struct Number;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3099,"byte_end":3117,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3122,"byte_end":3125,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ impl TypeMapKey for Number {","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3130,"byte_end":3162,"line_start":115,"line_end":115,"column_start":5,"column_end":37}},{"value":"/     type Value = i32;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3167,"byte_end":3192,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3197,"byte_end":3202,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3207,"byte_end":3210,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut map = TypeMap::new();","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3215,"byte_end":3248,"line_start":119,"line_end":119,"column_start":5,"column_end":38}},{"value":"/ map.insert::<Number>(42);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3253,"byte_end":3282,"line_start":120,"line_end":120,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3287,"byte_end":3290,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*map.get::<Number>().unwrap(), 42);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3295,"byte_end":3345,"line_start":122,"line_end":122,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3350,"byte_end":3357,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3362,"byte_end":3365,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`TypeMapKey`]: trait.TypeMapKey.html","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3370,"byte_end":3411,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3416,"byte_end":3425,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4275,"byte_end":4282,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TypeMap>::get_mut","value":"pub fn get_mut<T>(&mut Self) -> Option<&mut T::Value> where T: TypeMapKey","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a mutable reference to a value based on its [`TypeMapKey`].\n Returns `None` if it couldn't be found.","sig":null,"attributes":[{"value":"/ Retrieve a mutable reference to a value based on its [`TypeMapKey`].","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3629,"byte_end":3701,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ Returns `None` if it couldn't be found.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3706,"byte_end":3749,"line_start":137,"line_end":137,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3754,"byte_end":3757,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3762,"byte_end":3773,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/ use typemap_rev::{TypeMap, TypeMapKey};","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3778,"byte_end":3821,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3826,"byte_end":3829,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ struct Number;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3834,"byte_end":3852,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3857,"byte_end":3860,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ impl TypeMapKey for Number {","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3865,"byte_end":3897,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/     type Value = i32;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3902,"byte_end":3927,"line_start":145,"line_end":145,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3932,"byte_end":3937,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3942,"byte_end":3945,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut map = TypeMap::new();","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3950,"byte_end":3983,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ map.insert::<Number>(42);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":3988,"byte_end":4017,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4022,"byte_end":4025,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*map.get::<Number>().unwrap(), 42);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4030,"byte_end":4080,"line_start":151,"line_end":151,"column_start":5,"column_end":55}},{"value":"/ *map.get_mut::<Number>().unwrap() -= 42;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4085,"byte_end":4129,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*map.get::<Number>().unwrap(), 0);","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4134,"byte_end":4183,"line_start":153,"line_end":153,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4188,"byte_end":4195,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4200,"byte_end":4203,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`TypeMapKey`]: trait.TypeMapKey.html","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4208,"byte_end":4249,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4254,"byte_end":4263,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5044,"byte_end":5050,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"remove","qualname":"<TypeMap>::remove","value":"pub fn remove<T>(&mut Self) -> Option<T::Value> where T: TypeMapKey","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the map based on its [`TypeMapKey`], returning the value or `None` if\n the key has not been in the map.","sig":null,"attributes":[{"value":"/ Removes a value from the map based on its [`TypeMapKey`], returning the value or `None` if","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4483,"byte_end":4577,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ the key has not been in the map.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4582,"byte_end":4618,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4623,"byte_end":4626,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4631,"byte_end":4642,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ use typemap_rev::{TypeMap, TypeMapKey};","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4647,"byte_end":4690,"line_start":171,"line_end":171,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4695,"byte_end":4698,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ struct Text;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4703,"byte_end":4719,"line_start":173,"line_end":173,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4724,"byte_end":4727,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ impl TypeMapKey for Text {","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4732,"byte_end":4762,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/     type Value = String;","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4767,"byte_end":4795,"line_start":176,"line_end":176,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4800,"byte_end":4805,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4810,"byte_end":4813,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut map = TypeMap::new();","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4818,"byte_end":4851,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ map.insert::<Text>(String::from(\"Hello TypeMap!\"));","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4856,"byte_end":4911,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/ assert!(map.remove::<Text>().is_some());","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4916,"byte_end":4960,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/ assert!(map.get::<Text>().is_none());","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":4965,"byte_end":5006,"line_start":182,"line_end":182,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5011,"byte_end":5018,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5023,"byte_end":5032,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5812,"byte_end":5820,"line_start":215,"line_end":215,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5848,"byte_end":5854,"line_start":216,"line_end":216,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5768,"byte_end":5773,"line_start":211,"line_end":211,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"pub enum Entry<'a, K> where K: TypeMapKey {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":57}],"decl_id":null,"docs":" A view into a single entry in the [`TypeMap`],\n which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in the [`TypeMap`],","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5383,"byte_end":5433,"line_start":202,"line_end":202,"column_start":1,"column_end":51}},{"value":"/ which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5434,"byte_end":5477,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5478,"byte_end":5481,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ This heavily mirrors the official [`Entry`] API in the standard library,","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5482,"byte_end":5558,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/ but not all of it is provided due to implementation restrictions. Please","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5559,"byte_end":5635,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ refer to its documentations.","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5636,"byte_end":5668,"line_start":207,"line_end":207,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5669,"byte_end":5672,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [`TypeMap`]: struct.TypeMap.html","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5673,"byte_end":5709,"line_start":209,"line_end":209,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: std::collections::hash_map::Entry","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5710,"byte_end":5758,"line_start":210,"line_end":210,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5956,"byte_end":5965,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, K::Value) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5935,"byte_end":5944,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6187,"byte_end":6201,"line_start":232,"line_end":232,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut K::Value where F: FnOnce() ->\nK::Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6166,"byte_end":6175,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6459,"byte_end":6469,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut K::Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6438,"byte_end":6447,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6873,"byte_end":6883,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6852,"byte_end":6861,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6992,"byte_end":7005,"line_start":268,"line_end":268,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7243,"byte_end":7246,"line_start":281,"line_end":281,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &K::Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7222,"byte_end":7231,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7350,"byte_end":7357,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut K::Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7329,"byte_end":7338,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7473,"byte_end":7481,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7452,"byte_end":7461,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7596,"byte_end":7602,"line_start":296,"line_end":296,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, K::Value)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7575,"byte_end":7584,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7709,"byte_end":7715,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7688,"byte_end":7697,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7773,"byte_end":7784,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":8018,"byte_end":8024,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, K::Value) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7997,"byte_end":8006,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":838,"byte_end":845,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5304,"byte_end":5311,"line_start":196,"line_end":196,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5891,"byte_end":5896,"line_start":219,"line_end":219,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6786,"byte_end":6791,"line_start":257,"line_end":257,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7170,"byte_end":7183,"line_start":276,"line_end":276,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7947,"byte_end":7958,"line_start":314,"line_end":314,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":440,"byte_end":443,"line_start":16,"line_end":16,"column_start":23,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3744},"to":{"krate":0,"index":26}},{"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":838,"byte_end":845,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5304,"byte_end":5311,"line_start":196,"line_end":196,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":5891,"byte_end":5896,"line_start":219,"line_end":219,"column_start":13,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":6786,"byte_end":6791,"line_start":257,"line_end":257,"column_start":13,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7170,"byte_end":7183,"line_start":276,"line_end":276,"column_start":13,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Juan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typemap_rev-0.1.5\\src\\lib.rs","byte_start":7947,"byte_end":7958,"line_start":314,"line_end":314,"column_start":13,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}}]}